'''===================================
Class Notes 9-7
==================================='''

>>> myresult="ATCGN".find("GC")
>>> print(myresult)
-1
>>> myresult
-1
>>> dna_seq='ATCGATCG'
>>> len(dna_seq)
8
>>> seq_length=len(dna_seq)
>>> seq_length
8
>>> dna_seq='ANTCGTGN'
>>> dna_seq.replace('N', 'G')
'AGTCGTGG'
>>> new_seq=dna_seq.replace('N', 'G')
>>> new_seq
'AGTCGTGG'
>>> dna_seq
'ANTCGTGN'
>>> dna = '   ATGC   '
>>> dna.strip(' ')
'ATGC'
>>> mystr = 'Position of a character'
>>> mystr.find('s')
2
>>> mystr.find('x')
-1
>>> mystr.find(' ')
8
>>> mystr.find(' ', 9, 10)
-1
>>> mystr.startwith('Position')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'startwith'. Did you mean: 'startswith'?
>>> mystr.startswith('Position')
True
>>> mystr.startswith('Position', 5, 12)
False
>>> varA='A'
>>> varB='B'
>>> varC='C'
>>> print(" ".format(varA, varB, varC)
... )

>>> print(" {2} ".format(varA, varB, varC))
 C
>>> print(" |{2}| ".format(varA, varB, varC))
 |C|
>>> print('<{1}> |{2}| ({0})".format(varA+varA, varB+'Hello', varC))
  File "<stdin>", line 1
    print('<{1}> |{2}| ({0})".format(varA+varA, varB+'Hello', varC))
                                                           ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('<{1}> |{2}| ({0})".format(varA+varA, varB+'Hello', varC))
  File "<stdin>", line 1
    print('<{1}> |{2}| ({0})".format(varA+varA, varB+'Hello', varC))
                                                           ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('<{1}> |{2}| ({0})".format(varA+varA, varB+"Hello", varC))
  File "<stdin>", line 1
    print('<{1}> |{2}| ({0})".format(varA+varA, varB+"Hello", varC))
          ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print("<{1}> |{2}| ({0})".format(varA+varA, varB+'Hello', varC))
<BHello> |C| (AA)

#############################################################################PyCharm

'''====================
InClass Activity 9/7
======================'''

# setting up variables
dna_seq1 = 'ATgTCtCATTcAAAGCA------'
dna_seq2 = 'TCgTAGCtGATCgTGA'

#concatenating the two variables above
DNA_seq = dna_seq1 + dna_seq2
print(DNA_seq)

# remove the - in dna_seq
DNA_seq = DNA_seq.replace('-', '')
print(DNA_seq)

#capitalize all lowercase in the variable
DNA_seq = DNA_seq.upper()
print(DNA_seq)

def foo():
    DNA_seq1 = input("Enter your first sequence ")
    DNA_seq2 = input("Enter your second sequence ")
    #dna_seq1 = "ATgTCtCATTcAAAGCA------"
    #dna_seq2 = "TCgTAGCtGATCgTGA"
    print("Your first sequence is", DNA_seq1)
    print("Your second sequence is", DNA_seq2)
    DNA_seq = DNA_seq1 + DNA_seq2
    DNA_seq1.replace('-', '')
    print(DNA_seq1)


if __name__ == '__main__':
    foo()
